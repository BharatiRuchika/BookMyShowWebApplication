{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/BookMyShow/Book_My_Show_Back-main/client/src/admin/edit_movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\nimport '../profile.css';\nimport TimePicker from 'react-time-picker';\nimport { connect } from 'react-redux'; // import fire from '../files/firebase';\n\nimport { useParams } from 'react-router';\nimport Button from '@mui/material/Button';\nimport '../movie_details.css';\nimport axios from \"axios\";\nimport { ConstructionOutlined } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movieupload = props => {\n  _s();\n\n  const [image, setimage] = useState('');\n  const [moviename, setmoviename] = useState('');\n  const [ticketcost, setticketcost] = useState('');\n  const [description, setdescription] = useState('');\n  const [actorname, setactorname] = useState('');\n  const [directorname, setdirectorname] = useState('');\n  const [releasedate, setreleasedate] = useState('');\n  const [outdate, setoutdate] = useState('');\n  const [video, setvideo] = useState('');\n  const [value, onChange] = useState('10:00');\n  const [format, setformat] = useState('');\n  const [next, setnext] = useState(false);\n  const [inputList, setInputList] = useState([]);\n  const [previousinputList, setPreviousInputList] = useState([]);\n  const history = useHistory();\n  const params = useParams();\n  const profile = props.profile;\n  const name = props.name;\n  const email = props.email;\n  const mobile = props.mobile;\n  useEffect(() => {\n    getMovie();\n  }, []);\n  useEffect(() => {\n    console.log(\"inputList\", inputList);\n  }, [inputList]);\n\n  async function getMovie() {\n    const token = localStorage.getItem(\"token\");\n    var id = params.id;\n    var res = await axios.get(`https://bookmyshowback.herokuapp.com/movies/getmovie/${id}`, {\n      headers: {\n        'auth-token': token\n      }\n    });\n    console.log(\"res\", res);\n\n    if (res.status == 200) {\n      var movieId = res.data[0]._id;\n      var showres = await axios.get(`https://bookmyshowback.herokuapp.com/show/getshows/${movieId}`, {\n        headers: {\n          'auth-token': token\n        }\n      });\n      console.log(\"showres\", showres);\n      setInputList(showres.data);\n      setPreviousInputList(showres.data);\n      console.log(\"inputList\", inputList);\n    }\n\n    setimage(res.data[0].movieimage);\n    setmoviename(res.data[0].moviename);\n    setticketcost(res.data[0].ticketcost);\n    setdescription(res.data[0].description);\n    setactorname(res.data[0].actorname);\n    setdirectorname(res.data[0].directorname);\n    setreleasedate(res.data[0].releasedate);\n    setoutdate(res.data[0].outdate);\n    setvideo(res.data[0].videourl);\n    setformat(res.data[0].movieimage);\n  }\n\n  const showTimingUpload = () => {\n    console.log(\"upload time\");\n  };\n\n  const handleRemoveClick = index => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  const handleAddClick = () => {\n    setInputList([...inputList, {}]);\n  };\n\n  const movieUpload = async e => {\n    const token = localStorage.getItem(\"token\");\n    e.preventDefault();\n    console.log(\"in[putList\", inputList.length);\n\n    if (image === \"\" || video === \"\" || moviename === \"\" || description === \"\" || actorname === \"\" || directorname === \"\" || releasedate === \"\" || outdate === \"\", inputList.length < 1) {\n      alert(\"please fill all fields\");\n    } else {\n      var id = params.id;\n      var theaterId = params.theaterId;\n      var res = await axios.put(\"https://bookmyshowback.herokuapp.com/movies/editmovie\", {\n        id,\n        theaterId,\n        image,\n        video,\n        moviename,\n        description,\n        actorname,\n        directorname,\n        releasedate,\n        outdate,\n        ticketcost\n      }, {\n        headers: {\n          'auth-token': token\n        }\n      });\n      console.log(\"response\", res);\n\n      if (res.status == 200) {\n        var movieId = params.id;\n        ; // console.log(res.data.response._id);\n\n        console.log(\"inpulist\", inputList);\n        var showres = await axios.put(\"https://bookmyshowback.herokuapp.com/show/editshows\", {\n          inputList: inputList,\n          movieId: movieId,\n          previousinputList: previousinputList\n        }, {\n          headers: {\n            'auth-token': token\n          }\n        });\n        console.log(\"showres\", showres);\n\n        if (showres.data === \"success\") {\n          alert(\"Movie Updated Successfully\");\n          history.push(\"/movie_theater_upload\");\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form-container sign-in-container\",\n    className: \"movie-container\",\n    style: {\n      height: 'auto',\n      left: '0',\n      width: 'max-content',\n      zIndex: 2,\n      marginLeft: '33%',\n      marginTop: '9%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"upload-form\",\n      style: {\n        background: '#f6f5f7',\n        marginLeft: \"-50%\",\n        marginTop: \"inherit\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"upload-font\",\n        style: {\n          fontWeight: \"bold\",\n          background: \"#ff4b2b\",\n          color: \"white\"\n        },\n        children: \"Upload Theater Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"movie image url\",\n        value: image,\n        onChange: e => setimage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"movie viedo url\",\n        value: video,\n        onChange: e => setvideo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Movie name\",\n        value: moviename,\n        onChange: e => setmoviename(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ticket Cost\",\n        value: ticketcost,\n        onChange: e => setticketcost(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setdescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Actor Name\",\n        value: actorname,\n        onChange: e => setactorname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Director Name\",\n        value: directorname,\n        onChange: e => {\n          console.log(e.target.value);\n          setdirectorname(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"Select Release Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Pick release Date\",\n        value: releasedate,\n        onChange: e => setreleasedate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"Select Out Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Pick out Date\",\n        value: outdate,\n        onChange: e => setoutdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: \"black\"\n        },\n        children: \"Format\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"custom-select mb-2 mr-sm-2 mb-sm-0\",\n        name: \"format\",\n        placeholder: \"select format\",\n        value: format,\n        onChange: e => setformat(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2d\",\n          children: \"2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3d\",\n          children: \"3D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), inputList.map((x, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              color: \"black\",\n              marginLeft: \"100px\"\n            },\n            children: \"Select Show's Times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 94\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n            id: \"firststarttime\",\n            inputReadOnly: true,\n            showSecond: false,\n            use24Hours: true,\n            value: x.startTime,\n            onChange: value => {\n              console.log('New time is: ', value);\n              const list = [...inputList];\n              list[i][\"startTime\"] = value;\n              setInputList(list);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n            id: \"firststarttime\",\n            inputReadOnly: true,\n            showSecond: false,\n            use24Hours: true,\n            value: x.endTime,\n            onChange: value => {\n              console.log('New time is: ', value);\n              const list = [...inputList];\n              list[i][\"endTime\"] = value;\n              setInputList(list);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-box\",\n            children: [inputList.length - 1 === i && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddClick,\n              className: \"mr10\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 56\n            }, this), inputList.length !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              onClick: () => handleRemoveClick(i),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 24\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        style: {\n          background: \"#ff4b2b\",\n          color: \"white\",\n          marginTop: \"10px\"\n        },\n        value: \"Update Movie\",\n        onClick: movieUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movieupload, \"TbP3IqgbPPdd7YZohf9nUihD84A=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Movieupload;\n\nfunction mapStateToProps(state) {\n  console.log(\"state\", state);\n  return {\n    name: state.name,\n    email: state.email,\n    password: state.password,\n    mobile: state.mobile\n  };\n}\n\nexport default connect(mapStateToProps)(Movieupload);\n\nvar _c;\n\n$RefreshReg$(_c, \"Movieupload\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/BookMyShow/Book_My_Show_Back-main/client/src/admin/edit_movie.js"],"names":["React","useEffect","useState","useHistory","useLocation","Link","TimePicker","connect","useParams","Button","axios","ConstructionOutlined","Movieupload","props","image","setimage","moviename","setmoviename","ticketcost","setticketcost","description","setdescription","actorname","setactorname","directorname","setdirectorname","releasedate","setreleasedate","outdate","setoutdate","video","setvideo","value","onChange","format","setformat","next","setnext","inputList","setInputList","previousinputList","setPreviousInputList","history","params","profile","name","email","mobile","getMovie","console","log","token","localStorage","getItem","id","res","get","headers","status","movieId","data","_id","showres","movieimage","videourl","showTimingUpload","handleRemoveClick","index","list","splice","handleAddClick","movieUpload","e","preventDefault","length","alert","theaterId","put","push","height","left","width","zIndex","marginLeft","marginTop","background","fontWeight","color","target","map","x","i","startTime","endTime","mapStateToProps","state","password"],"mappings":"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","sourcesContent":["\n    import React, { useEffect, useState } from 'react'\n    import { useHistory, useLocation, Link } from 'react-router-dom';\n    import '../profile.css';\n    import TimePicker from 'react-time-picker';\n    \n    import { connect } from 'react-redux';\n    // import fire from '../files/firebase';\n    import { useParams } from 'react-router';\n    import Button from '@mui/material/Button';\n    import '../movie_details.css';\n    import axios from \"axios\";\nimport { ConstructionOutlined } from '@mui/icons-material';\n     const Movieupload = (props) => {\n        const [image, setimage] = useState('');\n        const [moviename, setmoviename] = useState('');\n        const [ticketcost, setticketcost] = useState('')\n        const [description, setdescription] = useState('');\n        const [actorname, setactorname] = useState('');\n        const [directorname, setdirectorname] = useState('');\n        const [releasedate, setreleasedate] = useState('');\n        const [outdate, setoutdate] = useState('');\n        const [video, setvideo] = useState('');\n        const [value, onChange] = useState('10:00');\n        const [format, setformat] = useState('');\n        const [next, setnext] = useState(false);\n        const [inputList, setInputList] = useState([]);\n        const [previousinputList, setPreviousInputList] = useState([]);\n        const history = useHistory();\n        const params = useParams();\n        const profile = props.profile;\n        const name = props.name;\n        const email = props.email;\n        const mobile = props.mobile;\n        useEffect(()=>{\n            getMovie();\n        },[])\n        useEffect(()=>{\n           console.log(\"inputList\",inputList);\n        },[inputList])\n      \n        async function getMovie(){\n            const token = localStorage.getItem(\"token\");\n              var id = params.id;\n              var res = await axios.get(`https://bookmyshowback.herokuapp.com/movies/getmovie/${id}`,{\n                  headers:{\n                      'auth-token':token\n                  }\n              });\n              console.log(\"res\",res);\n            if(res.status==200){\n                var movieId = res.data[0]._id;\n                var showres = await axios.get(`https://bookmyshowback.herokuapp.com/show/getshows/${movieId}`,{\n                    headers:{\n                        'auth-token':token\n                    }\n                });\n                console.log(\"showres\",showres);\n                 setInputList(showres.data);\n                 setPreviousInputList(showres.data);\n                console.log(\"inputList\",inputList);\n             }\n            setimage(res.data[0].movieimage);\n            setmoviename(res.data[0].moviename);\n            setticketcost(res.data[0].ticketcost);\n            setdescription(res.data[0].description);\n            setactorname(res.data[0].actorname);\n            setdirectorname(res.data[0].directorname);\n            setreleasedate(res.data[0].releasedate);\n            setoutdate(res.data[0].outdate);\n            setvideo(res.data[0].videourl);\n            setformat(res.data[0].movieimage);\n            }\n        const showTimingUpload = ()=>{\n            console.log(\"upload time\");\n        }\n        const handleRemoveClick = index => {\n            const list = [...inputList];\n            list.splice(index, 1);\n            setInputList(list);\n          };\n        \n          const handleAddClick = () => {\n            setInputList([...inputList,{}]);\n          };\n        const movieUpload = async(e) => {\n            const token = localStorage.getItem(\"token\");\n            e.preventDefault();\n            console.log(\"in[putList\",inputList.length);\n            if (image === \"\" || video === \"\" || moviename === \"\" || description === \"\" || actorname === \"\" || directorname === \"\" || releasedate === \"\" || outdate === \"\",inputList.length<1) {\n                alert(\"please fill all fields\");\n            } else {\n                var id = params.id;\n                var theaterId = params.theaterId\n                var res = await axios.put(\"https://bookmyshowback.herokuapp.com/movies/editmovie\",{\n                    id,theaterId,image,video,moviename,description,actorname,directorname,releasedate,outdate,ticketcost\n                },{\n                    headers:{\n                        'auth-token':token\n                    }\n                })\n                console.log(\"response\",res);\n                if(res.status==200){\n                    var movieId = params.id;;\n                    // console.log(res.data.response._id);\n                    console.log(\"inpulist\",inputList)\n                    var showres = await axios.put(\"https://bookmyshowback.herokuapp.com/show/editshows\",{\n                        inputList:inputList,movieId:movieId,previousinputList:previousinputList\n                    },{\n                        headers:{\n                            'auth-token':token\n                        }\n                    })\n                    console.log(\"showres\",showres);\n                    if(showres.data===\"success\"){\n                        alert(\"Movie Updated Successfully\");\n                        history.push(\"/movie_theater_upload\")\n                    }\n                }\n        }\n        }\n        return (\n        <div class=\"form-container sign-in-container\" className=\"movie-container\" style={{ height: 'auto', left: '0', width: 'max-content', zIndex: 2, marginLeft: '33%', marginTop: '9%' }}>\n                      \n        <form className=\"upload-form\" style={{ background: '#f6f5f7', marginLeft: \"-50%\", marginTop: \"inherit\" }}>\n        <h2 className=\"upload-font\" style={{ fontWeight: \"bold\", background: \"#ff4b2b\", color: \"white\" }}>Upload Theater Movies</h2>\n            <br />\n        <input type=\"text\" placeholder=\"movie image url\" value={image} onChange={(e) => setimage(e.target.value)} />\n         <input type=\"text\" placeholder=\"movie viedo url\" value={video} onChange={(e) => setvideo(e.target.value)} />\n         <input type=\"text\" placeholder=\"Movie name\" value={moviename} onChange={(e) => setmoviename(e.target.value)} />\n                                <input type=\"text\" placeholder=\"Ticket Cost\" value={ticketcost} onChange={(e) => setticketcost(e.target.value)} />\n                                <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setdescription(e.target.value)} />\n                                <input type=\"text\" placeholder=\"Actor Name\" value={actorname} onChange={(e) => setactorname(e.target.value)} />\n                                 <input type=\"text\" placeholder=\"Director Name\" value={directorname} onChange={(e) =>{\n                                    console.log(e.target.value);\n                                    setdirectorname(e.target.value)}} />\n                                <label style={{color:\"black\"}}>Select Release Date</label>\n                                <input type=\"date\" placeholder=\"Pick release Date\" value={releasedate} onChange={(e) => setreleasedate(e.target.value)} />\n                                <label style={{color:\"black\"}}>Select Out Date</label> \n                                \n                                 <input type=\"date\" placeholder=\"Pick out Date\" value={outdate} onChange={(e) => setoutdate(e.target.value)} />\n                             <label style={{color:\"black\"}}>Format</label>   \n                <select className=\"custom-select mb-2 mr-sm-2 mb-sm-0\" name=\"format\"placeholder=\"select format\" value={format} onChange={(e)=>setformat(e.target.value)}>\n                <option value=\"2d\">2D</option>\n                <option value=\"3d\">3D</option>\n                </select> \n                 {inputList.map((x, i) => {\n               return (<div className=\"box\">\n                <label style={{color:\"black\",marginLeft:\"100px\"}}>Select Show's Times</label><br/>\n               <b>From</b>\n                    <TimePicker\n                       id=\"firststarttime\"\n                       inputReadOnly\n                       showSecond={false}\n                       use24Hours\n                       value={x.startTime}\n                       onChange={(value) =>{ console.log('New time is: ', value)\n                       const list = [...inputList];\n                       list[i][\"startTime\"] = value;\n                       setInputList(list); \n                 }}\n                      />\n                      <b>To</b>\n                      <TimePicker\n                       id=\"firststarttime\"\n                       inputReadOnly\n                       showSecond={false}\n                       use24Hours\n                       value={x.endTime}\n                       onChange={(value) =>{ console.log('New time is: ', value)\n                       const list = [...inputList];\n                       list[i][\"endTime\"] = value; \n                        setInputList(list);\n                }}\n                      />\n                        <div className=\"btn-box\">\n                        {inputList.length - 1 === i && <button  onClick={handleAddClick} className=\"mr10\">Add</button>}\n                     {inputList.length !== 1 && <button\n                      style={{marginLeft:\"10px\"}} \n                       onClick={() => handleRemoveClick(i)}>Remove</button>}\n                   <br/> \n                    \n         </div>\n                    </div>\n                   \n                     );\n                    })}\n             <input type=\"button\" style={{ background: \"#ff4b2b\", color: \"white\",marginTop:\"10px\" }} value=\"Update Movie\" onClick={movieUpload} />\n                            </form>\n                       \n            </div>\n        )\n    }\n    function mapStateToProps(state) {\n            console.log(\"state\",state);\n            return {\n                name: state.name,\n                email:state.email,\n                password:state.password,\n                mobile:state.mobile\n            }\n        }\n    export default connect(mapStateToProps)(Movieupload);  "]},"metadata":{},"sourceType":"module"}